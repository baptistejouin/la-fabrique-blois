@use 'sass:color';

// Desktop-first approach
@mixin after($size) {
	// A declarer du plus grand au plus petit
	@if $size == xs {
		@media (min-width: 375px) {
			@content;
		}
	} @else if $size == sm {
		@media (min-width: 640px) {
			@content;
		}
	} @else if $size == md {
		@media (min-width: 768px) {
			@content;
		}
	} @else if $size == lg {
		@media (min-width: 1024px) {
			@content;
		}
	} @else if $size == xl {
		@media (min-width: 1280px) {
			@content;
		}
	} @else {
		@media (min-width: $size) {
			@content;
		}
	}
}

// Mobile-first approach
@mixin before($size) {
	// A declarer du plus petit au plus grand
	@if $size == xs {
		@media (max-width: 375px) {
			@content;
		}
	} @else if $size == sm {
		@media (max-width: 640px) {
			@content;
		}
	} @else if $size == md {
		@media (max-width: 768px) {
			@content;
		}
	} @else if $size == lg {
		@media (max-width: 1024px) {
			@content;
		}
	} @else if $size == xl {
		@media (max-width: 1280px) {
			@content;
		}
	} @else {
		@media (max-width: $size) {
			@content;
		}
	}
}
@function rgba2rgb($rgba_color, $rgb_bg: white) {
	$alpha: color.alpha($rgba_color);

	@return rgb((1 - $alpha) * color.red($rgb_bg) + $alpha * color.red($rgba_color), (1 - $alpha) * color.green($rgb_bg) + $alpha * color.green($rgba_color), (1 - $alpha) * color.blue($rgb_bg) + $alpha * color.blue($rgba_color));
}
